# Generated by Django 3.2.5 on 2021-09-01 14:56

import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Inquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='氏名')),
                ('email', models.EmailField(max_length=254, verbose_name='お客様のメールアドレス')),
                ('title', models.CharField(max_length=30, verbose_name='タイトル')),
                ('message', models.TextField(max_length=100000, verbose_name='お問い合わせ内容')),
            ],
            options={
                'db_table': 'inquiry',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('profile_icon', models.ImageField(blank=True, null=True, upload_to='profile_icons/', verbose_name='プロフィール画像')),
                ('self_introduction', models.CharField(blank=True, max_length=512, verbose_name='self introduction')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('sex', models.CharField(choices=[('男性', '男性'), ('女性', '女性'), ('その他', 'その他')], max_length=4, null=True, verbose_name='性別')),
                ('old', models.IntegerField(null=True, verbose_name='年齢')),
                ('last_name', models.CharField(max_length=30, null=True, verbose_name='姓')),
                ('first_name', models.CharField(max_length=30, null=True, verbose_name='名')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='誕生日')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'users',
            },
        ),
    ]
